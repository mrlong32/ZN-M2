name: IPQ60XX-6.12-WIFI-ZN-M2

on:
  workflow_dispatch:
  schedule:
    - cron: 0 19 * * *

env:
  REPO_URL: https://github.com/LiBwrt/openwrt-6.x.git
  REPO_BRANCH: k6.12-nss
  CONFIG_FILE: configs/ipq60xx-6.12-wifi.config  # 确保此配置仅包含ZN-M2
  DIY_SCRIPT: libwrt.sh
  CLASH_KERNEL: amd64
  CACHE_TOOLCHAIN: true
  UPLOAD_BIN_DIR: false  # 关闭完整bin目录上传，只保留必要文件
  FIRMWARE_RELEASE: true
  FIRMWARE_TAG: ZN-M2-IPQ60XX-6.12-WIFI  # 明确标记为ZN-M2固件
  TZ: Asia/Shanghai
  DEVICE_NAME: zn-m2

jobs:
  Build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
    - name: 检查服务器性能
      run: |
        echo "警告⚠：分配的服务器性能有限，请确保仅编译ZN-M2固件"
        echo "CPU核心信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c)"
        df -hT

    - name: 快速初始化环境（优化版）
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        # 并行清理冗余文件（关键路径优先）
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android $AGENT_TOOLSDIRECTORY &
        sudo apt-get clean && sudo apt-get autoremove -y &
        wait  # 等待并行清理完成
        
        # 精简卸载（只删除大型无用软件）
        sudo apt-get purge -y --auto-remove azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        
        # 快速更新并安装核心依赖（仅保留编译必需组件）
        sudo apt-get update -y
        sudo apt-get install -y build-essential git libncurses5-dev libz-dev patch unzip zlib1g-dev \
          gcc-multilib g++-multilib flex uglifyjs libssl-dev texinfo device-tree-compiler \
          python3 python3-pip gettext wget curl
        
        # 设置时区
        sudo timedatectl set-timezone "$TZ"
        
        # 显示环境准备完成
        echo "环境初始化完成，当前磁盘使用情况："
        df -hT

    - name: 合并磁盘空间
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 2048  # 适度增加交换空间，避免编译中断
        temp-reserve-mb: 500
        root-reserve-mb: 1024

    - name: 检出代码
      uses: actions/checkout@main

    - name: 克隆源代码
      run: |
        git clone --depth 1 -b $REPO_BRANCH $REPO_URL openwrt
        cd openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV
        VERSION_KERNEL=$(grep -oP 'LINUX_KERNEL_HASH-\K[0-9]+\.[0-9]+\.[0-9]+' target/linux/generic/kernel-6.12)
        echo "VERSION_KERNEL=$VERSION_KERNEL" >> $GITHUB_ENV

    - name: 生成变量
      run: |
        cp $CONFIG_FILE $OPENWRT_PATH/.config
        cd $OPENWRT_PATH
        make defconfig > /dev/null 2>&1
        SOURCE_REPO="$(echo $REPO_URL | awk -F '/' '{print $(NF)}')"
        echo "SOURCE_REPO=$SOURCE_REPO" >> $GITHUB_ENV
        DEVICE_TARGET=$(cat .config | grep CONFIG_TARGET_BOARD | awk -F '"' '{print $2}')
        echo "DEVICE_TARGET=$DEVICE_TARGET" >> $GITHUB_ENV
        DEVICE_SUBTARGET=$(cat .config | grep CONFIG_TARGET_SUBTARGET | awk -F '"' '{print $2}')
        echo "DEVICE_SUBTARGET=$DEVICE_SUBTARGET" >> $GITHUB_ENV

    - name: 缓存工具链
      if: env.CACHE_TOOLCHAIN == 'true'
      uses: HiGarfield/cachewrtbuild@main
      with:
        ccache: true  # 启用ccache加速编译
        mixkey: ${{ env.SOURCE_REPO }}-${{ env.REPO_BRANCH }}-${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}
        prefix: ${{ env.OPENWRT_PATH }}
      continue-on-error: true  # 缓存失败不影响主流程

    - name: 安装软件源
      run: |
        cd $OPENWRT_PATH
        ./scripts/feeds update -a
        git clone --depth 1 https://github.com/sbwml/openwrt_pkgs.git package/new/custom
        mv package/new/custom/luci-app-netspeedtest  package/new
        mv package/new/custom/speedtest-cli package/new
        rm -rf package/new/custom
        ./scripts/feeds install -a
  
    - name: 加载自定义配置
      run: |
        [ -e files ] && mv files $OPENWRT_PATH/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $OPENWRT_PATH/.config
        chmod +x $DIY_SCRIPT
        cd $OPENWRT_PATH
        $GITHUB_WORKSPACE/$DIY_SCRIPT
        # 强制只保留ZN-M2设备配置
        echo "CONFIG_TARGET_DEVICE_qualcommax_ipq60xx_DEVICE_zn_m2=y" >> .config
        echo "# 禁用其他设备" >> .config
        grep -E "CONFIG_TARGET_DEVICE_qualcommax_ipq60xx_DEVICE_" .config | grep -v "$DEVICE_NAME" | sed 's/=y/=n/' >> .config
        make defconfig  # 应用配置

    - name: 下载依赖包（并行加速）
      run: |
        cd $OPENWRT_PATH
        make defconfig
        make download -j$(nproc)  # 用CPU核心数并行下载
        find dl -size -1024c -exec rm -f {} \;  # 清理无效文件

    - name: 编译固件 (仅ZN-M2)
      id: compile
      run: |
        cd $OPENWRT_PATH
        echo -e "$(nproc) 线程编译"
        # 首次编译用多线程，失败则单线程调试
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        echo "DATE=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y.%m.%d")" >> $GITHUB_ENV

    - name: 检查空间使用情况
      if: (!cancelled())
      run: df -hT

    - name: 整理文件 (仅保留ZN-M2固件)
      if: steps.compile.outputs.status == 'success'
      run: |
        cd $OPENWRT_PATH/bin/targets/${DEVICE_TARGET}/${DEVICE_SUBTARGET}
        echo "编译生成的所有文件："
        ls -l
        # 筛选ZN-M2固件
        mkdir -p zn-m2-firmware
        mv *${DEVICE_NAME}*.bin zn-m2-firmware/ 2>/dev/null || true
        mv *${DEVICE_NAME}*.img zn-m2-firmware/ 2>/dev/null || true
        mv *${DEVICE_NAME}*.sha256 zn-m2-firmware/ 2>/dev/null || true
        mv build.config zn-m2-firmware/ 2>/dev/null || true
        # 检查是否有文件
        if [ -z "$(ls -A zn-m2-firmware)" ]; then
          echo "错误：未找到ZN-M2固件文件！"
          exit 1
        fi
        echo "FIRMWARE_PATH=$PWD/zn-m2-firmware" >> $GITHUB_ENV
        echo "最终发布的文件："
        ls -l zn-m2-firmware/

    - name: 上传ZN-M2固件到制品
      if: steps.compile.outputs.status == 'success' && env.FIRMWARE_RELEASE != 'true'
      uses: actions/upload-artifact@main
      with:
        name: zn-m2-firmware-${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE_PATH }}

    - name: 上传ZN-M2固件到发布
      if: steps.compile.outputs.status == 'success' && env.FIRMWARE_RELEASE == 'true'
      uses: ncipollo/release-action@v1
      with:
        name: ZN-M2 固件 ${VERSION_KERNEL} (${{ env.DATE }})
        allowUpdates: true
        tag: ${{ env.FIRMWARE_TAG }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.FIRMWARE_PATH }}/*
        body: |
          **ZN-M2 专用 OpenWrt 固件**
          ### 固件信息
          - 内核版本：${{ env.VERSION_KERNEL }}
          - 编译日期：${{ env.DATE }}
          - 适用设备：ZN-M2
          - 源码地址：${{ env.REPO_URL }}
          - 源码分支：${{ env.REPO_BRANCH }}
          - 默认地址：192.168.1.1
          - 默认密码：password
